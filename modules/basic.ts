import { ActionRowBuilder, ButtonBuilder, ButtonStyle, EmbedBuilder, SlashCommandBuilder, time } from 'discord.js';
import type { PrefixCommand, SlashCommand } from '../types/command.js';
import { getStore } from '../store/store.js';
import { getEnv } from '../lib/env.js';

// ===================== BASIC CMDS =====================
// Slash: /help
export const slash: SlashCommand = {
  data: new SlashCommandBuilder()
    .setName('help')
    .setDescription('Ki·ªÉm tra th√¥ng tin, c√°ch d√πng c√°c l·ªánh basic v√† camping'),
  async execute(interaction) {
    const embed = new EmbedBuilder()
      .setTitle('üî• H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng bot L·ª≠a Vi·ªát')
      .setDescription('Danh s√°ch c√°c l·ªánh v√† ch·ª©c nƒÉng c·ªßa bot')
      .setColor('#FF8C00')
      .addFields(
        { 
          name: '‚öôÔ∏è Prefix Commands', 
          value: `S·ª≠ d·ª•ng prefix: \`${getEnv().PREFIX}\``,
          inline: false
        },
        { 
          name: 'üí∞ L·ªánh Kinh T·∫ø (Economy)', 
          value: [
            '‚Ä¢ `lv work` - L√†m vi·ªác ki·∫øm LVC (30 ph√∫t)',
            '‚Ä¢ `lv daily` - Nh·∫≠n th∆∞·ªüng h√†ng ng√†y',
            '‚Ä¢ `lv weekly` - Qu√† h√†ng tu·∫ßn (7 ng√†y)',
            '‚Ä¢ `lv bet <s·ªë ti·ªÅn>` - ƒê·∫∑t c∆∞·ª£c may r·ªßi 50/50',
            '‚Ä¢ `lv cash` - Ki·ªÉm tra s·ªë d∆∞ t√†i kho·∫£n',
            '‚Ä¢ `lv profile [@user]` - Xem profile ƒë·∫ßy ƒë·ªß',
            '‚Ä¢ `lv give <@user> <s·ªë ti·ªÅn>` - Chuy·ªÉn ti·ªÅn cho ng∆∞·ªùi kh√°c',
            '‚Ä¢ `lv bxh` - Xem b·∫£ng x·∫øp h·∫°ng gi√†u c√≥',
            '‚Ä¢ `lv quest` - Xem v√† l√†m nhi·ªám v·ª• h√†ng ng√†y',
            '‚Ä¢ `lv inventory` / `lv inv` - Xem t√∫i ƒë·ªì ph√¢n lo·∫°i'
          ].join('\n'),
          inline: false
        },
        { 
          name: 'üè† L·ªánh Club', 
          value: [
            '‚Ä¢ `/clubowner <@user> <t√™n club> <role>` - Qu·∫£n l√Ω ch·ªß club',
            '‚Ä¢ `lv club create <t√™n>` - T·∫°o club m·ªõi',
            '‚Ä¢ `lv club add/remove/list` - Qu·∫£n l√Ω th√†nh vi√™n club',
            '‚Ä¢ `lv club daily` - Nh·∫≠n th∆∞·ªüng club h√†ng ng√†y',
            '‚Ä¢ `lv club bxh` - B·∫£ng x·∫øp h·∫°ng club',
            '‚Ä¢ `lv club inv` - Xem kho club',
            '‚Ä¢ `lv club quest` - Nhi·ªám v·ª• club',
            '‚Ä¢ `lv club info` - Th√¥ng tin campfire & buff',
            '‚Ä¢ `lv club donate <s·ªë ti·ªÅn>` - ƒê√≥ng g√≥p n√¢ng c·∫•p campfire'
          ].join('\n'),
          inline: false
        },
        { 
          name: 'üåæ L·ªánh N√¥ng Tr·∫°i (Farm)', 
          value: [
            '‚Ä¢ `lv farm` - Xem tr·∫°ng th√°i n√¥ng tr·∫°i',
            '‚Ä¢ `lv farm plant <lua|ngo|ca_rot|ca_chua>` - Gieo tr·ªìng c√¢y',
            '‚Ä¢ `lv farm harvest` - Thu ho·∫°ch n√¥ng s·∫£n',
            '‚Ä¢ `lv farm upgrade` - N√¢ng c·∫•p farm'
          ].join('\n'),
          inline: false
        },
        { 
          name: 'üèπ L·ªánh SƒÉn B·∫Øn (Hunt)', 
          value: [
            '‚Ä¢ `lv hunt` - SƒÉn b·∫Øn sinh v·∫≠t (10 ph√∫t)',
            '‚Ä¢ `lv hunt equip <v≈©_kh√≠>` - Trang b·ªã v≈© kh√≠',
            '‚Ä¢ `lv hunt inventory` - Xem ƒë·ªì sƒÉn b·∫Øn',
            '‚Ä¢ `lv hunt use <b√πa_ph√©p>` - D√πng b√πa ph√©p'
          ].join('\n'),
          inline: false
        },
        { 
          name: 'üé£ L·ªánh C√¢u C√° (Fishing)', 
          value: [
            '‚Ä¢ `lv fish` - C√¢u c√° (5 ph√∫t)',
            '‚Ä¢ `lv fish equip <c·∫ßn_c√¢u>` - Trang b·ªã c·∫ßn c√¢u',
            '‚Ä¢ `lv fish use <m·ªìi_c√¢u>` - D√πng m·ªìi c√¢u',
            '‚Ä¢ `lv fish inventory` - Xem ƒë·ªì c√¢u c√°'
          ].join('\n'),
          inline: false
        },
        { 
          name: 'üõí L·ªánh C·ª≠a H√†ng (Shop)', 
          value: [
            '‚Ä¢ `lv shop` - Xem t·∫•t c·∫£ c·ª≠a h√†ng',
            '‚Ä¢ `lv shop seeds` - C·ª≠a h√†ng h·∫°t gi·ªëng',
            '‚Ä¢ `lv shop weapons` - C·ª≠a h√†ng v≈© kh√≠',
            '‚Ä¢ `lv shop fishing` - C·ª≠a h√†ng ƒë·ªì c√¢u c√°',
            '‚Ä¢ `lv shop roles` - C·ª≠a h√†ng role',
            '‚Ä¢ `lv buy <item_id> [s·ªë l∆∞·ª£ng]` - Mua item',
            '‚Ä¢ `lv sell <item_id> [s·ªë l∆∞·ª£ng]` - B√°n item'
          ].join('\n'),
          inline: false
        },
        { 
          name: 'üéÆ Gi·∫£i tr√≠ (Entertainment)', 
          value: [
            '‚Ä¢ `lv blackjack <s·ªë ti·ªÅn>` - Ch∆°i Blackjack (x2, Blackjack x2.5)',
            '‚Ä¢ `lv baucua <b·∫ßu|cua|t√¥m|c√°|g√†|nai> <s·ªë ti·ªÅn>` - Ch∆°i B·∫ßu Cua',
            '‚Ä¢ `lv xocdia <ch·∫µn|l·∫ª> <s·ªë ti·ªÅn>` - Ch∆°i X√≥c ƒêƒ©a (x1.95)'
          ].join('\n'),
          inline: false
        }
      )
      .setFooter({ text: 'üî• Bot L·ª≠a Vi·ªát - L·ª≠a vl lu√¥n!' })
      .setTimestamp();
    
    await interaction.reply({ embeds: [embed], ephemeral: true });
  }
};

const store = getStore();

// lv cash
export const prefix: PrefixCommand = {
  name: 'cash',
  description: 'Check s·ªë d∆∞ ng∆∞·ªùi d√πng',
  async execute(message) {
    const profile = store.getUser(message.author.id);
    await message.reply(`S·ªë d∆∞ c·ªßa ${message.author} l√† ${profile.balance} LVC.`);
  }
};

// lv info
export const prefixInfo: PrefixCommand = {
  name: 'info',
  description: 'Hi·ªÉn th·ªã th√¥ng tin server',
  async execute(message) {
    const g = message.guild!;
    const embed = new EmbedBuilder()
      .setTitle(`Th√¥ng tin server: ${g.name}`)
      .addFields(
        { name: 'ID', value: g.id, inline: true },
        { name: 'Th√†nh vi√™n', value: `${g.memberCount}`, inline: true }
      );
    await message.reply({ embeds: [embed] });
  }
};

// lv give <@user> <amount>
export const prefixGive: PrefixCommand = {
  name: 'give',
  description: 'Chuy·ªÉn ti·ªÅn cho ng∆∞·ªùi d√πng kh√°c',
  async execute(message, args) {
    const target = message.mentions.users.first();
    const amount = Number(args.filter((a) => !a.startsWith('<@')).at(-1));
    if (!target || !Number.isFinite(amount) || amount <= 0) {
      await message.reply('C√∫ ph√°p: lv give <@user> <s·ªë ti·ªÅn>');
      return;
    }
    const from = store.getUser(message.author.id);
    if (from.balance < amount) {
      await message.reply('Kh√¥ng ƒë·ªß s·ªë d∆∞.');
      return;
    }
    from.balance -= amount;
    const to = store.getUser(target.id);
    to.balance += amount;
    store.save();
    await message.reply(`ƒê√£ chuy·ªÉn ${amount} LVC cho ${target}.`);
  }
};

// lv bxh
export const prefixBxh: PrefixCommand = {
  name: 'bxh',
  description: 'B·∫£ng x·∫øp h·∫°ng gi√†u nh·∫•t',
  async execute(message) {
    const top = store.getTopBalances(10);
    const desc = top
      .map((u, i) => `${i + 1}. <@${u.userId}> ‚Äî ${u.balance} LVC`)
      .join('\n');
    const embed = new EmbedBuilder().setTitle('BXH Gi√†u Nh·∫•t').setDescription(desc || 'Tr·ªëng');
    await message.reply({ embeds: [embed] });
  }
};

// lv daily
export const prefixDaily: PrefixCommand = {
  name: 'daily',
  description: 'ƒêi·ªÉm danh h·∫±ng ng√†y',
  async execute(message) {
    const res = store.claimDaily(message.author.id);
    await message.reply(res.message);
  }
};

// lv quest (daily 3 quest + refresh confirm -2000 LVC)
export const prefixQuest: PrefixCommand = {
  name: 'quest',
  description: 'Nhi·ªám v·ª• h·∫±ng ng√†y',
  async execute(message) {
    const quests = store.getDailyQuests(message.author.id);
    const rows = new ActionRowBuilder<ButtonBuilder>().addComponents(
      new ButtonBuilder().setCustomId(`quest_refresh:${message.author.id}`).setLabel('L√†m M·ªõi').setStyle(ButtonStyle.Secondary)
    );
    const lines = quests.map((q, idx) => `Nhi·ªám v·ª• ${idx + 1}: ${q.desc} ‚Äî Th∆∞·ªüng ${q.reward} LVC ‚Äî ${q.done ? 'Ho√†n th√†nh' : 'Ch∆∞a'}`);
    await message.reply({ content: lines.join('\n') + '\nNh·∫•n "L√†m M·ªõi" n·∫øu nhi·ªám v·ª• qu√° kh√≥ (m·∫•t 2000 LVC).', components: [rows] });
  }
};

// ƒêƒÉng k√Ω th√™m c√°c l·ªánh prefix ph·ª• trong file
export const prefixes: PrefixCommand[] = [prefixInfo, prefixGive, prefixBxh, prefixDaily, prefixQuest];


